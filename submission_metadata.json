{"author-info":{"cwid":"10795749","full-name":"Lucas Henke","username":"lhenke"},"deliverables":{"project-submission":{"base-checks":[{"name":"InGitRepo","warnings":[]},{"name":"RunningOnIsengard","warnings":["You are not running this script on the Isengard server.\n\nPlease be sure that your code compiles and runs properly on one of the ALAMODE machines."]},{"name":"UntrackedFiles","warnings":[]},{"name":"UncommittedFiles","warnings":["You have uncommitted changes:\n\nsubmit-my-work\n\nThese changes to tracked files will not be included in your submission unless\nyou commit them."]},{"name":"CodeCompiles","warnings":[]},{"name":"LinuxKernelStyle","warnings":["You have style errors.  Points may be deducted for poor style.\n\nSee the Linux Kernel Style Guide for reference, the required style\nguide for this course:\nhttps://www.kernel.org/doc/html/v5.8/process/coding-style.html\n\nCheckpatch output:\n> ----------------\n> include/common.h\n> ----------------\n> total: 0 errors, 0 warnings, 26 lines checked\n> \n> include/common.h has no obvious style problems and is ready for submission.\n> --------------\n> include/pzip.h\n> --------------\n> total: 0 errors, 0 warnings, 35 lines checked\n> \n> include/pzip.h has no obvious style problems and is ready for submission.\n> ------------\n> mains/pzip.c\n> ------------\n> total: 0 errors, 0 warnings, 152 lines checked\n> \n> mains/pzip.c has no obvious style problems and is ready for submission.\n> ----------\n> src/pzip.c\n> ----------\n> WARNING: space prohibited between function name and open parenthesis '('\n> #29: FILE: src/pzip.c:29:\n> +\tprintf (\"TODO: Start from here!\\n\");\n> \n> total: 0 errors, 1 warnings, 31 lines checked\n> \n> src/pzip.c has style problems, please review.\n> \n> NOTE: Ignored message types: C99_COMMENT_TOLERANCE CONST_STRUCT EMBEDDED_FUNCTION_NAME FILE_PATH_CHANGES SPDX_LICENSE_TAG SPLIT_STRING\n> \n> NOTE: If any of the errors are false positives, please report\n>       them to the maintainer, see CHECKPATCH in MAINTAINERS.\n\nNote: you may be able to correct trivial indentation errors using\nclang-format.  Example:\n\n$ clang-format -i include/common.h include/pzip.h mains/pzip.c src/pzip.c\n$ git commit -am \"Ran clang-format\""]}],"calc-slip-days":0,"carried-slip-days":0,"deliverable-specific-checks":[],"hostname":"user-mint","local-due-date":1616219999,"local-timestamp":1614566655,"resubmission-detected":false,"slip-days-spent":0}}}